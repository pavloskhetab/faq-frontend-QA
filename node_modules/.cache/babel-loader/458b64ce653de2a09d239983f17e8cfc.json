{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\faq-frontend\\\\src\\\\Components\\\\FAQMainPage.js\";\nimport React from 'react';\nimport { Form, FormControl, Button } from 'react-bootstrap';\nimport './css/FAQ.css';\nimport AskQuestionModal from './AskQuestionModal.component';\nimport DeleteQuestionModal from './DeleteQuestionModal.component';\nimport { TextArea } from 'semantic-ui-react';\nexport default class Home extends React.Component {\n  constructor() {\n    super();\n\n    this.search = e => {\n      e.preventDefault();\n      var initialString = document.getElementById(\"searchText\").value;\n      var queryString = initialString.replace(/[^a-zA-Z ]/g, \"\");\n      fetch(\"http://localhost:4001/Questions/SearchQ/\".concat(queryString)).then(response => response.json()).then(data => {\n        this.setState({\n          filteredResults: data,\n          search: true\n        });\n      });\n    };\n\n    this.handleButtonToggleDeleteQuestionModal = (toggle, q_id) => {\n      this.setState({\n        showModalq: toggle\n      });\n      sessionStorage.setItem('q_id', q_id);\n    };\n\n    this.editQuestion = (q_id, spanid, question) => {\n      var ref = document.getElementById(spanid);\n      ref.innerHTML = \"\";\n      var refTextInput1 = document.createElement(\"TextArea\");\n      var refConfirmButton1 = document.createElement(\"input\");\n      refConfirmButton1.type = \"Button\";\n      refConfirmButton1.value = \"Confirm\";\n      refConfirmButton1.className = \"EditConfirm\";\n      refConfirmButton1.addEventListener(\"click\", function () {\n        let data = {\n          \"q_id\": q_id,\n          \"updQ\": refTextInput1.value\n        };\n        fetch(\"http://localhost:4001/Questions/UpdateQ\", {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        });\n        window.location.replace(\"http://localhost:3000/\");\n      });\n      refTextInput1.style.minWidth = \"60%\";\n      refTextInput1.style.maxWidth = \"60%\";\n      refTextInput1.style.marginLeft = \"20px\";\n      refTextInput1.value = question;\n      ref.appendChild(refTextInput1);\n      ref.appendChild(refConfirmButton1);\n    };\n\n    this.componentDidMount = async () => {\n      let dataUnanswered = \"\";\n      let dataRecent = \"\";\n      await fetch(\"http://localhost:4001/Questions/RecentQ\") //Url from backend\n      .then(response => response.json()).then(dataRe => {\n        dataRecent = dataRe;\n      });\n      await fetch(\"http://localhost:4001/Questions/UnansweredQ\") //Url from backend\n      .then(response => response.json()).then(dataUn => {\n        dataUnanswered = dataUn;\n      });\n      await fetch(\"http://localhost:4001/Questions/TopRatedQ\") //Url from backend\n      .then(response => response.json()).then(dataTop => {\n        this.setState({\n          RecentQ: dataRecent,\n          UnansweredQ: dataUnanswered,\n          TopRatedQ: dataTop\n        });\n      });\n    };\n\n    this.handleButtonToggleAskModal = toggle => {\n      this.setState({\n        showModal: toggle\n      });\n    };\n\n    this.textAnswer = () => {\n      return React.createElement(TextArea, {\n        id: \"textQuestion\",\n        style: {\n          maxWidth: '100%',\n          minWidth: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      });\n    };\n\n    this.callchange = e => {\n      console.log(e.keyCode);\n\n      if (e.keyCode == 13) {\n        this.search(e);\n      } //e.preventDefault()\n\n    };\n\n    this.state = {\n      //this.state represent the rendered values, i.e. whatâ€™s currently on the screen\n      RecentQ: [],\n      UnansweredQ: [],\n      TopRatedQ: [],\n      showIssueModal: true,\n      search: false //Name of what you want \n\n    };\n  }\n\n  renderHomepage() {\n    this.setState({\n      filteredResults: this.state.filteredResults,\n      search: true\n    });\n  }\n\n  Qstorage(question, q_id) {\n    sessionStorage.setItem('questions', question);\n    sessionStorage.setItem('q_id', q_id);\n  }\n\n  render() {\n    if (this.state.search == true) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"body\", {\n        id: \"page-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        class: \"navbar navbar-expand-lg fixed-top\",\n        id: \"mainNav\",\n        style: {\n          backgroundColor: '#DFDFDF',\n          borderTop: '2px solid',\n          borderBottom: '2px solid',\n          color: 'black',\n          paddingTop: '0px',\n          paddingBottom: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"navbar-brand js-scroll-trigger\",\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"Nationwide.png\",\n        width: \"50\",\n        height: \"50\",\n        alt: \"Nationwide Logo\",\n        style: {\n          borderRadius: '25px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"searchBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Form, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"searchText\",\n        onKeyDown: this.callchange,\n        spellcheck: \"true\",\n        size: \"sm\",\n        placeholder: \"Search...\",\n        className: \"mr-sm-1 searchBarText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"searchButton\",\n        onClick: this.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"search.png\",\n        width: \"30px\",\n        height: \"30px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        class: \"collapse navbar-collapse\",\n        id: \"navbarResponsive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        style: {\n          marginTop: '60px',\n          marginBottom: '30px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col-lg-8  \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          color: '#3252A4'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Search Results:\"), React.createElement(\"p\", {\n        class: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), this.state.filteredResults.map((data, index) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/answer\",\n        onClick: () => this.Qstorage(data.question, data.q_id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, index + 1, \") \", data.question), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })))))), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginTop: '210px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Not found what you were looking for?\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.handleButtonToggleAskModal(true),\n        style: {\n          height: '25px',\n          paddingTop: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Ask A Question\")), React.createElement(AskQuestionModal, {\n        content: this.textAnswer(),\n        title: \"Ask A Question\",\n        showModal: this.state.showModal,\n        close: () => this.handleButtonToggleAskModal(false),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"footer\", {\n        className: \"py-1  FAQFooter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        class: \"m-0 text-center text-black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Copyright \\xA9 APT 2019\"))));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"body\", {\n        id: \"page-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        class: \"navbar navbar-expand-lg fixed-top\",\n        id: \"mainNav\",\n        style: {\n          backgroundColor: '#DFDFDF',\n          borderTop: '2px solid',\n          borderBottom: '2px solid',\n          color: 'black',\n          paddingTop: '0px',\n          paddingBottom: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"navbar-brand js-scroll-trigger\",\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"Nationwide.png\",\n        width: \"50\",\n        height: \"50\",\n        alt: \"Nationwide Logo\",\n        style: {\n          borderRadius: '25px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"searchBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Form, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"searchText\",\n        onKeyDown: this.callchange,\n        spellcheck: \"true\",\n        size: \"sm\",\n        placeholder: \"Search...\",\n        className: \"mr-sm-1 searchBarText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"searchButton\",\n        onClick: this.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"search.png\",\n        width: \"30px\",\n        height: \"30px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        class: \"collapse navbar-collapse\",\n        id: \"navbarResponsive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"container\",\n        style: {\n          marginTop: '60px',\n          marginBottom: '30px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col-lg-8  \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          color: '#3252A4'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Trending Questions\"), React.createElement(\"p\", {\n        class: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), this.state.TopRatedQ.map((data, index) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: 'tquestion' + data.q_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \" \", React.createElement(\"a\", {\n        href: \"/answer\",\n        onClick: () => this.Qstorage(data.question, data.q_id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, index + 1, \") \", data.question)), React.createElement(\"a\", {\n        href: \"#\",\n        onClick: () => this.editQuestion(data.q_id, \"tquestion\" + data.q_id, data.question),\n        style: {\n          marginLeft: '20px',\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"a\", {\n        href: \"#\",\n        onClick: () => this.handleButtonToggleDeleteQuestionModal(true, data.q_id),\n        style: {\n          marginLeft: '20px',\n          marginRight: '20px',\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col-lg-8 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          color: '#3252A4'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Questions Which Need Answers\"), React.createElement(\"p\", {\n        class: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }), this.state.UnansweredQ.map((data, index) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: 'uaquestion' + data.q_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"   \", React.createElement(\"a\", {\n        href: \"/answer\",\n        onClick: () => this.Qstorage(data.question, data.q_id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, index + 1, \") \", data.question)), React.createElement(\"a\", {\n        href: \"#\",\n        onClick: () => this.editQuestion(data.q_id, \"uaquestion\" + data.q_id, data.question),\n        style: {\n          marginLeft: '20px',\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"a\", {\n        href: \"#\",\n        onClick: () => this.handleButtonToggleDeleteQuestionModal(true, data.q_id),\n        style: {\n          marginLeft: '20px',\n          marginRight: '20px',\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col-lg-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          color: '#3252A4'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Recently Posted Questions\"), React.createElement(\"p\", {\n        class: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }), this.state.RecentQ.map((data, index) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: 'rpquestion' + data.q_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"  \", React.createElement(\"a\", {\n        href: \"/answer\",\n        onClick: () => this.Qstorage(data.question, data.q_id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, index + 1, \") \", data.question)), React.createElement(\"a\", {\n        href: \"#\",\n        onClick: () => this.editQuestion(data.q_id, \"rpquestion\" + data.q_id, data.question),\n        style: {\n          marginLeft: '20px',\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"a\", {\n        href: \"#\",\n        onClick: () => this.handleButtonToggleDeleteQuestionModal(true, data.q_id),\n        style: {\n          marginLeft: '20px',\n          marginRight: '20px',\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      })))))), React.createElement(DeleteQuestionModal, {\n        title: \"Delete Confirmation\",\n        showModalq: this.state.showModalq,\n        close: () => this.handleButtonToggleDeleteQuestionModal(false),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }), React.createElement(\"footer\", {\n        class: \"py-1 sticky-bottom\",\n        className: \"FAQFooter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        class: \"m-0 text-center text-black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Copyright \\xA9 APT 2019\"))));\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/faq-frontend/src/Components/FAQMainPage.js"],"names":["React","Form","FormControl","Button","AskQuestionModal","DeleteQuestionModal","TextArea","Home","Component","constructor","search","e","preventDefault","initialString","document","getElementById","value","queryString","replace","fetch","then","response","json","data","setState","filteredResults","handleButtonToggleDeleteQuestionModal","toggle","q_id","showModalq","sessionStorage","setItem","editQuestion","spanid","question","ref","innerHTML","refTextInput1","createElement","refConfirmButton1","type","className","addEventListener","method","headers","body","JSON","stringify","window","location","style","minWidth","maxWidth","marginLeft","appendChild","componentDidMount","dataUnanswered","dataRecent","dataRe","dataUn","dataTop","RecentQ","UnansweredQ","TopRatedQ","handleButtonToggleAskModal","showModal","textAnswer","callchange","console","log","keyCode","state","showIssueModal","renderHomepage","Qstorage","render","backgroundColor","borderTop","borderBottom","color","paddingTop","paddingBottom","borderRadius","marginTop","marginBottom","map","index","height","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, FormControl, Button } from 'react-bootstrap'\r\nimport './css/FAQ.css'\r\nimport AskQuestionModal from './AskQuestionModal.component'\r\nimport DeleteQuestionModal from './DeleteQuestionModal.component'\r\nimport { TextArea } from 'semantic-ui-react'\r\n\r\nexport default class Home extends React.Component {\r\n    constructor() {\r\n        super();\r\n        \r\n\r\n        this.state = {                                                        //this.state represent the rendered values, i.e. whatâ€™s currently on the screen\r\n            RecentQ: [],\r\n            UnansweredQ: [],\r\n            TopRatedQ: [],\r\n            showIssueModal: true,\r\n            search:false\r\n            //Name of what you want \r\n        }\r\n    }\r\n\r\n    search = (e) => {\r\n        e.preventDefault()\r\n        var initialString = document.getElementById(\"searchText\").value\r\n        var queryString = initialString.replace(/[^a-zA-Z ]/g, \"\")\r\n        fetch(`http://localhost:4001/Questions/SearchQ/${queryString}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    filteredResults: data,\r\n                    search:true\r\n                })\r\n            \r\n            })\r\n    }\r\n\r\n    handleButtonToggleDeleteQuestionModal = (toggle,q_id) => {\r\n        this.setState({\r\n            showModalq: toggle\r\n            \r\n        });\r\n        sessionStorage.setItem('q_id', q_id)\r\n    }\r\n    renderHomepage() {\r\n        this.setState({\r\n            filteredResults: this.state.filteredResults,\r\n            search:true\r\n        })\r\n    }\r\n\r\n    Qstorage(question, q_id) {\r\n        sessionStorage.setItem('questions', question)\r\n        sessionStorage.setItem('q_id', q_id)\r\n    }\r\n    \r\n\r\n    editQuestion = (q_id,spanid, question ) => {\r\n        var ref = document.getElementById(spanid)\r\n        ref.innerHTML = \"\"\r\n        var refTextInput1 = document.createElement(\"TextArea\");\r\n        var refConfirmButton1 = document.createElement(\"input\");\r\n        refConfirmButton1.type = \"Button\"\r\n        refConfirmButton1.value = \"Confirm\"\r\n        refConfirmButton1.className = \"EditConfirm\"\r\n        refConfirmButton1.addEventListener(\"click\", function () {\r\n            let data = {\r\n                \"q_id\": q_id,\r\n                \"updQ\": refTextInput1.value\r\n            }\r\n            fetch(`http://localhost:4001/Questions/UpdateQ`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n            window.location.replace(`http://localhost:3000/`)\r\n        })\r\n        refTextInput1.style.minWidth = \"60%\"\r\n        refTextInput1.style.maxWidth = \"60%\"\r\n        refTextInput1.style.marginLeft = \"20px\"\r\n        refTextInput1.value = question\r\n        ref.appendChild(refTextInput1)\r\n        ref.appendChild(refConfirmButton1)\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n\r\n\r\n        let dataUnanswered = \"\"\r\n        let dataRecent = \"\"\r\n\r\n        await fetch(\"http://localhost:4001/Questions/RecentQ\")                         //Url from backend\r\n            .then(response => response.json())\r\n            .then(dataRe => {\r\n                dataRecent = dataRe;\r\n            })\r\n        await fetch(\"http://localhost:4001/Questions/UnansweredQ\")                                  //Url from backend\r\n            .then(response => response.json())\r\n            .then(dataUn => {\r\n                dataUnanswered = dataUn\r\n            })\r\n        await fetch(\"http://localhost:4001/Questions/TopRatedQ\")                                  //Url from backend\r\n            .then(response => response.json())\r\n            .then(dataTop => {\r\n\r\n                this.setState({\r\n                    RecentQ: dataRecent,\r\n                    UnansweredQ: dataUnanswered,\r\n                    TopRatedQ: dataTop\r\n                })\r\n            })\r\n    }\r\n\r\n    \r\n    handleButtonToggleAskModal = (toggle) => {\r\n\r\n        this.setState({\r\n            showModal: toggle\r\n        });\r\n    }\r\n\r\n\r\n    textAnswer = () => {\r\n        return (\r\n            <TextArea id=\"textQuestion\" style={{ maxWidth: '100%', minWidth: '100%' }} />\r\n\r\n        );\r\n    }\r\n\r\n    callchange = (e) => {\r\n        console.log(e.keyCode)\r\n        if (e.keyCode == 13) {\r\n            this.search(e)\r\n        }\r\n        //e.preventDefault()\r\n    }\r\n    render() {\r\n        if (this.state.search==true) {\r\n            return (\r\n                <div>\r\n                    <body id=\"page-top\">\r\n\r\n                        <nav class=\"navbar navbar-expand-lg fixed-top\" id=\"mainNav\" style={{ backgroundColor: '#DFDFDF', borderTop: '2px solid', borderBottom: '2px solid', color: 'black', paddingTop: '0px', paddingBottom: '0px' }}>\r\n                            <div class=\"container\">\r\n                                <a class=\"navbar-brand js-scroll-trigger\" href=\"/\"><img\r\n                                    src=\"Nationwide.png\"\r\n                                    width=\"50\"\r\n                                    height=\"50\"\r\n                                    alt=\"Nationwide Logo\"\r\n                                    style={{ borderRadius: '25px' }} /></a>\r\n                                 <div className='searchBar'> \r\n                                <Form inline>\r\n                                    <input id=\"searchText\" onKeyDown={this.callchange} spellcheck='true' size=\"sm\" placeholder=\"Search...\" className=\"mr-sm-1 searchBarText\" />\r\n                                <button className='searchButton' onClick={this.search}><img src=\"search.png\" width='30px' height='30px'></img></button>\r\n                                </Form>\r\n                                </div>\r\n                                <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n\r\n                                </div>\r\n                            </div>\r\n                        </nav>\r\n                    </body>\r\n                    <br />\r\n                    <div className=\"container\" style={{ marginTop: '60px', marginBottom: '30px' }}>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-8  \">\r\n                                <h3 style={{ color: '#3252A4' }}>Search Results:</h3>\r\n                                <p class=\"lead\"></p>\r\n                                {\r\n                                    this.state.filteredResults.map((data, index) =>\r\n\r\n                                        <div>\r\n                                            <a href=\"/answer\" onClick={() => this.Qstorage(data.question, data.q_id)}>{index + 1}) {data.question}</a><br />\r\n                                            <br />\r\n                                        </div>\r\n                                    )}\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <center>\r\n                        <div style={{ marginTop: '210px' }}>Not found what you were looking for?</div><br />\r\n                        <Button variant='danger' onClick={() => this.handleButtonToggleAskModal(true)} style={{ height: '25px', paddingTop: '0' }}>Ask A Question</Button>\r\n                    </center>\r\n                    <AskQuestionModal content={this.textAnswer()} title={\"Ask A Question\"} showModal={this.state.showModal} close={() => this.handleButtonToggleAskModal(false)} /><br />\r\n                    <footer className='py-1  FAQFooter'>\r\n                        <div class=\"container\">\r\n                            <p class=\"m-0 text-center text-black\">Copyright &copy; APT 2019</p>\r\n                        </div>\r\n                    </footer>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <body id=\"page-top\">\r\n\r\n                        <nav class=\"navbar navbar-expand-lg fixed-top\" id=\"mainNav\" style={{ backgroundColor: '#DFDFDF', borderTop: '2px solid', borderBottom: '2px solid', color: 'black', paddingTop: '0px', paddingBottom: '0px' }}>\r\n                            <div class=\"container\">\r\n                                <a class=\"navbar-brand js-scroll-trigger\" href=\"/\"><img\r\n                                    src=\"Nationwide.png\"\r\n                                    width=\"50\"\r\n                                    height=\"50\"\r\n                                    alt=\"Nationwide Logo\"\r\n                                    style={{ borderRadius: '25px' }} /></a>\r\n                                <div className='searchBar'> \r\n                                <Form inline>\r\n                                    <input id=\"searchText\" onKeyDown={this.callchange} spellcheck='true' size=\"sm\" placeholder=\"Search...\" className=\"mr-sm-1 searchBarText\" />\r\n                                <button className='searchButton' onClick={this.search}><img src=\"search.png\" width='30px' height='30px'></img></button>\r\n                                </Form>\r\n                                </div>\r\n                                <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n\r\n                                </div>\r\n                            </div>\r\n                        </nav>\r\n                    </body>\r\n                    <br />\r\n\r\n                    <div class=\"container\" style={{ marginTop: '60px', marginBottom: '30px' }}>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-8  \">\r\n                                <h3 style={{ color: '#3252A4' }}>Trending Questions</h3>\r\n                                <p class=\"lead\"></p>\r\n                                {\r\n                                    this.state.TopRatedQ.map((data, index) =>\r\n                                        \r\n                                        <div>\r\n\r\n                                           <span id={'tquestion' + data.q_id}> <a href=\"/answer\" onClick={() => this.Qstorage(data.question, data.q_id)}>{index + 1}) {data.question}</a></span>\r\n                                            \r\n                                        <a href='#' onClick={() => this.editQuestion(data.q_id,\"tquestion\" + data.q_id, data.question)} style={{ marginLeft: '20px', color:'red' }}>Edit</a>\r\n                                        <a href='#'onClick={() => this.handleButtonToggleDeleteQuestionModal(true, data.q_id)} style={{ marginLeft: '20px', marginRight: '20px', color:'red' }}>Delete</a><br />\r\n\r\n                                            <br />\r\n                                        </div>\r\n                                    )}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-8 \">\r\n                                <h3 style={{ color: '#3252A4' }}>Questions Which Need Answers</h3>\r\n                                <p class=\"lead\"></p>\r\n                                {\r\n                                    this.state.UnansweredQ.map((data, index) =>\r\n                                        <div>\r\n                                          <span id={'uaquestion' + data.q_id}>   <a href=\"/answer\" onClick={() => this.Qstorage(data.question, data.q_id)}>{index + 1}) {data.question}</a></span>\r\n                                        <a href='#' onClick={() => this.editQuestion(data.q_id,\"uaquestion\"+ data.q_id, data.question)} style={{ marginLeft: '20px', color:'red' }}>Edit</a>\r\n                                        <a href='#' onClick={() => this.handleButtonToggleDeleteQuestionModal(true, data.q_id)} style={{ marginLeft: '20px', marginRight: '20px', color:'red' }}>Delete</a><br />\r\n                                        <br /><br />\r\n                                        </div>\r\n                                    )}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-8\">\r\n                                <h3 style={{ color: '#3252A4' }}>Recently Posted Questions</h3>\r\n                                <p class=\"lead\"></p>\r\n                                {\r\n                                    this.state.RecentQ.map((data, index) =>\r\n                                        <div>\r\n                                           <span id={'rpquestion' + data.q_id}>  <a href=\"/answer\" onClick={() => this.Qstorage(data.question, data.q_id)}>{index + 1}) {data.question}</a></span>\r\n                                        <a href='#' onClick={() => this.editQuestion(data.q_id,\"rpquestion\"+data.q_id, data.question)} style={{ marginLeft: '20px', color:'red' }}>Edit</a>\r\n                                        <a href='#' onClick={() => this.handleButtonToggleDeleteQuestionModal(true, data.q_id)} style={{ marginLeft: '20px', marginRight: '20px', color:'red' }}>Delete</a><br/>\r\n                                        <br /><br /> \r\n                                        </div>\r\n                                    )}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <DeleteQuestionModal title={\"Delete Confirmation\"} showModalq={this.state.showModalq} close={() => this.handleButtonToggleDeleteQuestionModal(false)} />\r\n                    <footer class=\"py-1 sticky-bottom\" className='FAQFooter'>\r\n                        <div class=\"container\">\r\n                            <p class=\"m-0 text-center text-black\">Copyright &copy; APT 2019</p>\r\n                        </div>\r\n                    </footer>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}