{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\faq-frontend\\\\src\\\\Components\\\\AnswerPage.component.js\";\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport './css/FAQ.css';\nimport AnswerQuestionsModal from './AnswerModal.component';\nimport CommentModal from './CommentModal.component';\nimport DeleteAnswerModal from './DeleteAnswerModal.component';\nimport DeleteCommentModal from './DeleteCommentModal.component';\nimport { TextArea } from 'semantic-ui-react';\n/**\r\n * Class that handles the functions and the rendering \r\n * for the answer page\r\n *\r\n * @export\r\n * @class Answer\r\n * @extends {React.Component}\r\n */\n\nexport default class Answer extends React.Component {\n  constructor() {\n    super();\n\n    this.handleButtonToggleCommentModal = toggle => {\n      this.setState({\n        showModal: toggle\n      });\n    };\n\n    this.handleButtonToggleAnswerModal = toggle => {\n      this.setState({\n        showModal1: toggle\n      });\n    };\n\n    this.handleButtonToggleDeleteAnswerModal = (toggle, a_id) => {\n      this.setState({\n        showModal2: toggle\n      });\n      var a_id = sessionStorage.setItem('a_id', a_id);\n    };\n\n    this.handleButtonToggleDeleteCommentModal = (toggle, c_id) => {\n      this.setState({\n        showModal3: toggle\n      });\n      var c_id = sessionStorage.setItem('c_id', c_id);\n    };\n\n    this.textAnswer = () => {\n      return React.createElement(TextArea, {\n        style: {\n          maxWidth: '100%',\n          minWidth: '100%'\n        },\n        id: \"textAnswer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      });\n    };\n\n    this.textComment = () => {\n      return React.createElement(TextArea, {\n        style: {\n          maxWidth: '100%',\n          minWidth: '100%'\n        },\n        id: \"textComment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      });\n    };\n\n    this.editAnswer = (spanid, answer) => {\n      var ref = document.getElementById(\"answer\" + spanid);\n      ref.innerHTML = \"\";\n      var refTextInput = document.createElement(\"TextArea\");\n      var refConfirmButton = document.createElement(\"input\");\n      refConfirmButton.type = \"Button\";\n      refConfirmButton.value = \"Confirm\";\n      refConfirmButton.className = \"EditConfirm\";\n      refConfirmButton.addEventListener(\"click\", function () {\n        let data = {\n          \"a_id\": spanid,\n          \"updA\": refTextInput.value\n        };\n        fetch(\"http://localhost:4001/Answers/UpdateA\", {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        });\n        window.location.replace(\"http://localhost:3000/answer\");\n      });\n      refTextInput.style.minWidth = \"60%\";\n      refTextInput.style.maxWidth = \"60%\";\n      refTextInput.style.marginLeft = \"20px\";\n      refTextInput.value = answer;\n      ref.appendChild(refTextInput);\n      ref.appendChild(refConfirmButton);\n    };\n\n    this.editQuestionRating = async id => {\n      let currentRating = \"\";\n      let q_id = sessionStorage.getItem('q_id');\n      await fetch(\"http://localhost:9001/Questions/TotalRatings/\".concat(q_id)) //Url from backend\n      .then(response => response.json()).then(dataTop => {\n        currentRating = dataTop;\n      });\n\n      if (id == \"UP\") {\n        currentRating = currentRating + 1;\n      } else if (id == \"DOWN\") {\n        currentRating = currentRating - 1;\n      }\n\n      let updateRating = {\n        \"rating\": currentRating,\n        \"q_id\": q_id,\n        \"u_id\": 24\n      };\n      await fetch(\"http://localhost:9001/Questions/EditQuestionRating\", {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updateRating)\n      });\n    };\n\n    this.editAnswerRating = async (vote, a_id) => {\n      let currentRating = \"\";\n      await fetch(\"http://localhost:9001/Answers/TotalRatings/\".concat(a_id)) //Url from backend\n      .then(response => response.json()).then(dataTop => {\n        currentRating = dataTop;\n      });\n\n      if (vote == \"UP\") {\n        currentRating = currentRating + 1;\n      } else if (vote == \"DOWN\") {\n        currentRating = currentRating - 1;\n      }\n\n      var updateRating = {\n        \"rating\": currentRating,\n        \"a_id\": a_id,\n        \"u_id\": 24\n      };\n      await fetch(\"http://localhost:9001/Answers/EditAnswerRating\", {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updateRating)\n      });\n    };\n\n    this.editComment = (spanid, comment) => {\n      var ref = document.getElementById(\"comment\" + spanid);\n      ref.innerHTML = \"\";\n      var refTextInput = document.createElement(\"TextArea\");\n      var refConfirmButton = document.createElement(\"input\");\n      refConfirmButton.type = \"Button\";\n      refConfirmButton.value = \"Confirm\";\n      refConfirmButton.className = \"EditConfirm\";\n      refConfirmButton.addEventListener(\"click\", function () {\n        let data = {\n          \"c_id\": spanid,\n          \"updC\": refTextInput.value\n        };\n        fetch(\"http://localhost:4001/Comments/UpdateC\", {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        });\n        window.location.replace(\"http://localhost:3000/answer\");\n      });\n      refTextInput.style.minWidth = \"50%\";\n      refTextInput.style.maxWidth = \"50%\";\n      refTextInput.style.marginLeft = \"60px\";\n      refTextInput.innerHTML = comment;\n      ref.appendChild(refTextInput);\n      ref.appendChild(refConfirmButton);\n    };\n\n    this.componentDidMount = async () => {\n      let Alpha = \"\";\n      let Beta = \"\";\n      let Gamma = \"\";\n      let totalRatingQ = \"\";\n      var Ratings = []; // var urlString = window.location.href\n      // var url = new URL(urlString)\n      // var q_id =  url.searchParams.get(\"q\");\n\n      var q_id = sessionStorage.getItem('q_id');\n      await fetch(\"http://localhost:4001/Answers/RecentA/\".concat(q_id)).then(response => response.json()).then(dataRecentA => {\n        Alpha = dataRecentA; //     if(dataRecentA.length>0){\n        //         dataRecentA.forEach(element => {\n        //         fetch(`http://localhost:9001/Answers/TotalRatings/${element.a_id}`)\n        //             .then(response => response.json())\n        //             .then(data => {\n        //                 Ratings.push(data) \n        //                 Alpha = this.combineArray(dataRecentA,Ratings)   \n        //             })\n        //     })\n        // }\n        //     else{Alpha=dataRecentA}  \n      });\n      await fetch(\"http://localhost:9001/Questions/TotalRatings/\".concat(q_id)).then(response => response.json()).then(data => {\n        if (data > 0) {\n          data = \"+\" + data;\n        }\n\n        totalRatingQ = data;\n      });\n      await fetch(\"http://localhost:4001/Answers/CountA/\".concat(q_id)) //Url from backend\n      .then(response => response.json()).then(data => {\n        Beta = data[0].hits;\n      });\n\n      if (Beta > 0) {\n        fetch(\"http://localhost:4001/Comments/GetC/\".concat(q_id)).then(response => response.json()).then(dataC => {\n          Gamma = dataC;\n          this.setState({\n            RecentC: dataC,\n            RecentA: Alpha,\n            CountA: Beta,\n            QuestionRating: totalRatingQ\n          });\n        });\n      } else {\n        this.setState({\n          RecentC: Gamma,\n          RecentA: Alpha,\n          CountA: 0,\n          QuestionRating: totalRatingQ\n        });\n      }\n    };\n\n    this.state = {\n      RecentA: [],\n      RecentC: [],\n      CountA: 0,\n      QuestionRating: 0,\n      showIssueModal: true\n    };\n  }\n  /**\r\n  * This is a function that is called when the add answer button is clicked.\r\n  * It stores the answer id in the sessionStorage and then calls another function\r\n  * called handleButtonToggleCommentModal\r\n  *\r\n  * @param {*} a_id\r\n  * @memberof Answer\r\n  */\n\n\n  answerStorage(a_id) {\n    sessionStorage.setItem('a_id', a_id);\n    this.handleButtonToggleCommentModal(true);\n  }\n  /**\r\n  * This is the function responsible for showing the modal\r\n  * once the add comment button is clicked\r\n  *\r\n  * @memberof Answer\r\n  */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(\"body\", {\n      id: \"page-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      class: \"navbar navbar-expand-lg fixed-top\",\n      id: \"mainNav\",\n      className: \"FAQHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      class: \"navbar-brand js-scroll-trigger\",\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"Nationwide.png\",\n      width: \"50\",\n      height: \"50\",\n      alt: \"Nationwide Logo\",\n      style: {\n        borderRadius: '25px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"danger\",\n      onClick: () => this.handleButtonToggleAnswerModal(true),\n      style: {\n        height: '25px',\n        paddingTop: '0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, \"Answer Question\"), React.createElement(AnswerQuestionsModal, {\n      content: this.textAnswer(),\n      title: \"Answer Question\",\n      showModal1: this.state.showModal1,\n      close: () => this.handleButtonToggleAnswerModal(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"collapse navbar-collapse\",\n      id: \"navbarResponsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"QuestionSubheading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, \"Question:\"), React.createElement(\"h4\", {\n      className: \"QuestionHeading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, \" \", sessionStorage.getItem('questions'), React.createElement(Button, {\n      variant: \"primary\",\n      id: \"upVoteQ\",\n      onClick: () => this.editQuestionRating(\"UP\"),\n      className: \"VoteUp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      style: {\n        marginBottom: '3px'\n      },\n      class: \"arrow up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"danger\",\n      id: \"dwnVoteQ\",\n      onClick: () => this.editQuestionRating(\"DOWN\"),\n      className: \"VoteDown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      style: {\n        marginBottom: '7px'\n      },\n      class: \"arrow down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    })), \"(rating: \", this.state.QuestionRating, \")\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    })), React.createElement(\"text\", {\n      variant: \"secondary\",\n      style: {\n        marginLeft: '40px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, \"posted on: \", sessionStorage.getItem('postDQ'), \" @ \", sessionStorage.getItem('postTQ')), React.createElement(\"div\", {\n      class: \"container site-container\",\n      style: {\n        marginTop: '20px',\n        marginBottom: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"AnswersSubheading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, \"Answers (\", this.state.CountA, \"): \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Separator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    })), this.state.RecentA.map(data => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: 'answer' + data.a_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, \" \", React.createElement(\"text\", {\n      className: \"EditAnswerText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, data.answer)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, \"posted on: \", data.niceDate, \" @ \", data.niceTime), React.createElement(\"a\", {\n      href: \"#\",\n      onClick: () => this.editAnswer(data.a_id, data.answer),\n      style: {\n        marginLeft: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(\"a\", {\n      href: \"#\",\n      onClick: () => this.handleButtonToggleDeleteAnswerModal(true, data.a_id),\n      style: {\n        marginLeft: '20px',\n        marginRight: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.editAnswerRating(\"UP\", data.a_id),\n      className: \"VoteUp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      style: {\n        marginBottom: '3px'\n      },\n      class: \"arrow up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"danger\",\n      onClick: () => this.editAnswerRating(\"DOWN\", data.a_id),\n      className: \"VoteDown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      style: {\n        marginBottom: '7px'\n      },\n      class: \"arrow down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    })), \"(rating: \", data.rating, \")\", React.createElement(Button, {\n      variant: \"primary\",\n      size: \"sm\",\n      onClick: () => this.answerStorage(data.a_id),\n      className: \"CommentButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, \"Add Comment\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      className: \"AnswerCommentSeparator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }), this.state.RecentC.map(RecentC => {\n      if (data.a_id == RecentC.a_id) {\n        var element = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 454\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          id: 'comment' + RecentC.c_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 454\n          },\n          __self: this\n        }, React.createElement(\"textarea\", {\n          rows: \"3\",\n          className: \"CommentBox\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 454\n          },\n          __self: this\n        }, RecentC.comment)), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 454\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          style: {\n            marginLeft: '55px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457\n          },\n          __self: this\n        }, \"posted on: \", RecentC.niceDate), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          style: {\n            marginLeft: '55px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458\n          },\n          __self: this\n        }, \"@ \", RecentC.niceTime), React.createElement(\"a\", {\n          href: \"#\",\n          onClick: () => this.editComment(RecentC.c_id, RecentC.comment),\n          style: {\n            marginLeft: '20px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"a\", {\n          href: \"#\",\n          onClick: () => this.handleButtonToggleDeleteCommentModal(true, RecentC.c_id),\n          style: {\n            marginLeft: '20px',\n            marginRight: '20px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460\n          },\n          __self: this\n        }, \"Delete\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, element);\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      className: \"Separator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    })))))), React.createElement(DeleteAnswerModal, {\n      title: \"Delete Confirmation\",\n      showModal2: this.state.showModal2,\n      close: () => this.handleButtonToggleDeleteAnswerModal(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }), React.createElement(DeleteCommentModal, {\n      title: \"Delete Confirmation\",\n      showModal3: this.state.showModal3,\n      close: () => this.handleButtonToggleDeleteCommentModal(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }), React.createElement(CommentModal, {\n      content: this.textComment(),\n      title: \"Add A Comment\",\n      showModal: this.state.showModal,\n      close: () => this.handleButtonToggleCommentModal(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }), React.createElement(\"footer\", {\n      class: \"py-1 sticky-bottom footer\",\n      className: \"FAQFooter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      class: \"m-0 text-center text-black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, \"Copyright \\xA9 APT 2019\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/faq-frontend/src/Components/AnswerPage.component.js"],"names":["React","Button","AnswerQuestionsModal","CommentModal","DeleteAnswerModal","DeleteCommentModal","TextArea","Answer","Component","constructor","handleButtonToggleCommentModal","toggle","setState","showModal","handleButtonToggleAnswerModal","showModal1","handleButtonToggleDeleteAnswerModal","a_id","showModal2","sessionStorage","setItem","handleButtonToggleDeleteCommentModal","c_id","showModal3","textAnswer","maxWidth","minWidth","textComment","editAnswer","spanid","answer","ref","document","getElementById","innerHTML","refTextInput","createElement","refConfirmButton","type","value","className","addEventListener","data","fetch","method","headers","body","JSON","stringify","window","location","replace","style","marginLeft","appendChild","editQuestionRating","id","currentRating","q_id","getItem","then","response","json","dataTop","updateRating","editAnswerRating","vote","editComment","comment","componentDidMount","Alpha","Beta","Gamma","totalRatingQ","Ratings","dataRecentA","hits","dataC","RecentC","RecentA","CountA","QuestionRating","state","showIssueModal","answerStorage","render","borderRadius","height","paddingTop","marginBottom","marginTop","map","niceDate","niceTime","marginRight","rating","element"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport './css/FAQ.css'\r\nimport AnswerQuestionsModal from './AnswerModal.component'\r\nimport CommentModal from './CommentModal.component'\r\nimport DeleteAnswerModal from './DeleteAnswerModal.component'\r\nimport DeleteCommentModal from './DeleteCommentModal.component'\r\nimport { TextArea } from 'semantic-ui-react'\r\n\r\n\r\n/**\r\n * Class that handles the functions and the rendering \r\n * for the answer page\r\n *\r\n * @export\r\n * @class Answer\r\n * @extends {React.Component}\r\n */\r\nexport default class Answer extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n       \r\n        this.state = {\r\n            RecentA: [],\r\n            RecentC: [],\r\n            CountA: 0,\r\n            QuestionRating: 0,\r\n            showIssueModal: true\r\n        }\r\n\r\n    }\r\n    /**\r\n    * This is a function that is called when the add answer button is clicked.\r\n    * It stores the answer id in the sessionStorage and then calls another function\r\n    * called handleButtonToggleCommentModal\r\n    *\r\n    * @param {*} a_id\r\n    * @memberof Answer\r\n    */\r\n    answerStorage(a_id) {\r\n        sessionStorage.setItem('a_id', a_id)\r\n        this.handleButtonToggleCommentModal(true)\r\n    }\r\n\r\n\r\n    /**\r\n    * This is the function responsible for showing the modal\r\n    * once the add comment button is clicked\r\n    *\r\n    * @memberof Answer\r\n    */\r\n\r\n    handleButtonToggleCommentModal = (toggle) => {\r\n        this.setState({\r\n            showModal: toggle\r\n        });\r\n    }\r\n    /**\r\n    * This is the function responsible for showing the modal\r\n    * once the add answer button is clicked\r\n    *\r\n    * @memberof Answer\r\n    */\r\n    handleButtonToggleAnswerModal = (toggle) => {\r\n        this.setState({\r\n            showModal1: toggle\r\n        });\r\n    }\r\n\r\n    /**\r\n    * This is the function responsible for showing the model\r\n    * once the delete answer button is clicked\r\n    *\r\n    * @memberof Answer\r\n    */\r\n    handleButtonToggleDeleteAnswerModal = (toggle, a_id) => {\r\n        this.setState({\r\n            showModal2: toggle\r\n        });\r\n        var a_id = sessionStorage.setItem('a_id', a_id);\r\n    }\r\n\r\n    /**\r\n     * This is the function responsible for showing the model\r\n     * once the delete answer button is clicked\r\n     *\r\n     * @memberof Answer\r\n     */\r\n    handleButtonToggleDeleteCommentModal = (toggle, c_id) => {\r\n        this.setState({\r\n            showModal3: toggle\r\n        });\r\n        var c_id = sessionStorage.setItem('c_id', c_id);\r\n    }\r\n    /**\r\n    *This is the function responsible for the text area that is typed in\r\n    *when you want to post an answer. We would use getElementByID(\"textAnswer\")\r\n    *\r\n    * @memberof Answer\r\n    */\r\n    textAnswer = () => {\r\n        return (\r\n            <TextArea style={{ maxWidth: '100%', minWidth: '100%' }} id=\"textAnswer\" />\r\n        );\r\n    }\r\n\r\n    /**\r\n     * This is the fucntion responsible for the text area that is typed in\r\n     * when you want to post a comment. We would use getElementByID(\"textComment\")\r\n     *\r\n     * @memberof Answer\r\n     */\r\n    textComment = () => {\r\n        return (\r\n            <TextArea style={{ maxWidth: '100%', minWidth: '100%' }} id=\"textComment\" />\r\n        );\r\n    }\r\n\r\n\r\n    /**\r\n     * This is a functoin that is called when the edit button that is next to\r\n     * the answers is clicked. \r\n     * It communicates with the backednd through a fetch request to /Answers\r\n     * /UpdateA.\r\n     * It will then redirect you back to the answers page once this has been\r\n     * submitted through a window.location.replace\r\n     *\r\n     * @memberof Answer\r\n     */\r\n\r\n    editAnswer = (spanid, answer) => {\r\n\r\n        var ref = document.getElementById(\"answer\" + spanid)\r\n        ref.innerHTML = \"\"\r\n        var refTextInput = document.createElement(\"TextArea\");\r\n        var refConfirmButton = document.createElement(\"input\");\r\n        refConfirmButton.type = \"Button\"\r\n        refConfirmButton.value = \"Confirm\"\r\n        refConfirmButton.className = \"EditConfirm\"\r\n        refConfirmButton.addEventListener(\"click\", function () {\r\n            let data = {\r\n                \"a_id\": spanid,\r\n                \"updA\": refTextInput.value\r\n            }\r\n            fetch(`http://localhost:4001/Answers/UpdateA`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n            window.location.replace(`http://localhost:3000/answer`)\r\n        })\r\n        refTextInput.style.minWidth = \"60%\"\r\n        refTextInput.style.maxWidth = \"60%\"\r\n        refTextInput.style.marginLeft = \"20px\"\r\n        refTextInput.value = answer\r\n        ref.appendChild(refTextInput)\r\n        ref.appendChild(refConfirmButton)\r\n    }\r\n    \r\n    /**\r\n     * This is a function that is responsible for 'up-voting' and 'down-voting'\r\n     * question ratings.\r\n     * Firstly it will fetch the current question rating from database with q_id.\r\n     * If the up-vote button is clicked, then it +1 to the current rating.\r\n     * If the down-vote button is clicked, then it -1 to the current rating.\r\n     * It then updates this is the backend through a PUT request.\r\n     *\r\n     * @memberof Answer\r\n     */\r\n    \r\n    editQuestionRating = async (id) => {\r\n        let currentRating = \"\"\r\n        let q_id = sessionStorage.getItem('q_id')\r\n        await fetch(`http://localhost:9001/Questions/TotalRatings/${q_id}`)                                  //Url from backend\r\n            .then(response => response.json())\r\n            .then(dataTop => {\r\n\r\n                currentRating = dataTop\r\n            })\r\n                \r\n        if (id == \"UP\") { currentRating = currentRating + 1 }\r\n        else if (id == \"DOWN\") { currentRating = currentRating - 1 }\r\n\r\n        let updateRating = {\r\n            \"rating\": currentRating,\r\n            \"q_id\": q_id,\r\n            \"u_id\": 24\r\n        }\r\n        await fetch(`http://localhost:9001/Questions/EditQuestionRating`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(updateRating)\r\n        })\r\n     \r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * This is a function that is responsible for 'up-voting' and 'down-voting'\r\n     * answer ratings.\r\n     * Firstly it will fetch the current answer rating from database with q_id.\r\n     * If the up-vote button is clicked, then it +1 to the current rating.\r\n     * If the down-vote button is clicked, then it -1 to the current rating.\r\n     * It then updates this is the backend through a PUT request.\r\n     *\r\n     * @memberof Answer\r\n     */\r\n                  \r\n    editAnswerRating = async (vote, a_id) => {\r\n        let currentRating = \"\"\r\n        await fetch(`http://localhost:9001/Answers/TotalRatings/${a_id}`)                                  //Url from backend\r\n            .then(response => response.json())\r\n            .then(dataTop => {\r\n\r\n                currentRating = dataTop\r\n            })\r\n\r\n        if (vote == \"UP\") { currentRating = currentRating + 1 }\r\n        else if (vote == \"DOWN\") { currentRating = currentRating - 1 }\r\n\r\n        var updateRating = {\r\n            \"rating\": currentRating,\r\n            \"a_id\": a_id,\r\n            \"u_id\": 24\r\n        }\r\n        await fetch(`http://localhost:9001/Answers/EditAnswerRating`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(updateRating)\r\n        })\r\n\r\n        \r\n       \r\n    }\r\n\r\n    \r\n\r\n        \r\n    \r\n        \r\n    /**\r\n     * This is a function that is called when the edit button that is next to\r\n     * the comments is clicked. \r\n     * It communicates with the backednd through a fetch request to /Comments\r\n     * /UpdateC.\r\n     * It will then redirect you back to the answers page once this has been\r\n     * submitted through a window.location.replace\r\n     *\r\n     * @memberof Answer\r\n     */\r\n        \r\n\r\n    editComment = (spanid, comment) => {\r\n\r\n        var ref = document.getElementById(\"comment\" + spanid)\r\n        ref.innerHTML = \"\"\r\n        var refTextInput = document.createElement(\"TextArea\");\r\n        var refConfirmButton = document.createElement(\"input\");\r\n        refConfirmButton.type = \"Button\"\r\n        refConfirmButton.value = \"Confirm\"\r\n        refConfirmButton.className = \"EditConfirm\"\r\n        refConfirmButton.addEventListener(\"click\", function () {\r\n            let data = {\r\n                \"c_id\": spanid,\r\n                \"updC\": refTextInput.value\r\n            }\r\n            fetch(`http://localhost:4001/Comments/UpdateC`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n            window.location.replace(`http://localhost:3000/answer`)\r\n        })\r\n        refTextInput.style.minWidth = \"50%\"\r\n        refTextInput.style.maxWidth = \"50%\"\r\n        refTextInput.style.marginLeft = \"60px\"\r\n        refTextInput.innerHTML = comment \r\n        ref.appendChild(refTextInput)\r\n        ref.appendChild(refConfirmButton)\r\n    }\r\n\r\n\r\n    // combineArray = (RecentA, Ratings) => {\r\n    //     console.log(Ratings)\r\n    //     console.log(Ratings[0])\r\n    //     var newArray = []\r\n    //         newArray = RecentA.map((data, index) => {\r\n    //             return (\r\n    //                 {\r\n    //                     \"a_id\": data.a_id,\r\n    //                     \"answer\": data.answer,\r\n    //                     \"niceDate\": data.niceDate,\r\n    //                     \"niceTime\": data.niceTime,\r\n    //                     \"postdate_A\": data.postdate_A,\r\n    //                     \"q_id\": data.q_id,\r\n    //                     \"u_id\": data.u_id,\r\n    //                     \"rating\": Ratings[index]\r\n    //                 }\r\n    //             )\r\n    //         })\r\n        \r\n                   \r\n    //     return (newArray)\r\n    // }\r\n\r\n\r\n    /**\r\n     * This componentDidMount function is responsible for processing\r\n     * all of the get requests relating to answers to the backend.\r\n     * They display the recent answers answers as well as those\r\n     * /Answers/CountA tells you how many answers there are.\r\n     * /Comments/GetC gets all the comments relating to the specific\r\n     * answer from the back-end.\r\n     *\r\n     * @memberof Answer\r\n     */\r\n    \r\n\r\n    componentDidMount = async () => {\r\n        let Alpha = \"\"\r\n        let Beta = \"\"\r\n        let Gamma = \"\"\r\n        let totalRatingQ = \"\"\r\n        \r\n        var Ratings = []\r\n        // var urlString = window.location.href\r\n        // var url = new URL(urlString)\r\n        // var q_id =  url.searchParams.get(\"q\");\r\n        var q_id = sessionStorage.getItem('q_id')\r\n       await fetch(`http://localhost:4001/Answers/RecentA/${q_id}`)\r\n            .then(response => response.json())\r\n            .then(dataRecentA => {\r\n                Alpha=dataRecentA\r\n            //     if(dataRecentA.length>0){\r\n\r\n            //         dataRecentA.forEach(element => {\r\n            //         fetch(`http://localhost:9001/Answers/TotalRatings/${element.a_id}`)\r\n            //             .then(response => response.json())\r\n            //             .then(data => {\r\n            //                 Ratings.push(data) \r\n            //                 Alpha = this.combineArray(dataRecentA,Ratings)   \r\n            //             })\r\n            //     })\r\n            // }\r\n            //     else{Alpha=dataRecentA}  \r\n            })\r\n        await fetch(`http://localhost:9001/Questions/TotalRatings/${q_id}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n\r\n                if (data > 0) { data = \"+\" + data }\r\n\r\n                totalRatingQ = data\r\n              \r\n            })\r\n\r\n        await fetch(`http://localhost:4001/Answers/CountA/${q_id}`)\r\n            //Url from backend\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                Beta = data[0].hits\r\n\r\n            })\r\n        if (Beta > 0) {\r\n            fetch(`http://localhost:4001/Comments/GetC/${q_id}`)\r\n                .then(response => response.json())\r\n                .then(dataC => {\r\n                    Gamma = dataC\r\n                    this.setState({\r\n                        RecentC: dataC,\r\n                        RecentA: Alpha,\r\n                        CountA: Beta,\r\n                        QuestionRating: totalRatingQ,\r\n                    })\r\n                })\r\n        }\r\n        else {\r\n            this.setState({\r\n                RecentC: Gamma,\r\n                RecentA: Alpha,\r\n                CountA: 0,\r\n                QuestionRating: totalRatingQ,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <body id=\"page-top\">\r\n                    <nav class=\"navbar navbar-expand-lg fixed-top\" id=\"mainNav\" className='FAQHeader'>\r\n                        <div class=\"container\">\r\n                            <a class=\"navbar-brand js-scroll-trigger\" href=\"/\"><img\r\n                                src=\"Nationwide.png\"\r\n                                width=\"50\"\r\n                                height=\"50\"\r\n                                alt=\"Nationwide Logo\"\r\n                                style={{ borderRadius: '25px' }} /></a>\r\n                            <Button variant='danger' onClick={() => this.handleButtonToggleAnswerModal(true)} style={{ height: '25px', paddingTop: '0' }}>Answer Question</Button>\r\n                            <AnswerQuestionsModal content={this.textAnswer()} title={\"Answer Question\"} showModal1={this.state.showModal1} close={() => this.handleButtonToggleAnswerModal(false)} />\r\n                            <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n                </body>\r\n                <br />\r\n                <h3 className='QuestionSubheading'>Question:\r\n                </h3>\r\n                <h4 className='QuestionHeading'> {sessionStorage.getItem('questions')}<Button variant='primary' id=\"upVoteQ\" onClick={() => this.editQuestionRating(\"UP\")} className='VoteUp'><i style={{ marginBottom: '3px' }} class=\"arrow up\"></i></Button>\r\n                    <Button variant='danger' id=\"dwnVoteQ\" onClick={() => this.editQuestionRating(\"DOWN\")} className='VoteDown'><i style={{ marginBottom: '7px' }} class=\"arrow down\"></i></Button>\r\n\r\n                    (rating: {this.state.QuestionRating})<br /></h4>\r\n\r\n                <text variant='secondary' style={{ marginLeft: '40px' }}>posted on: {sessionStorage.getItem('postDQ')} @ {sessionStorage.getItem('postTQ')}</text>\r\n                <div class=\"container site-container\" style={{ marginTop: '20px', marginBottom: '30px' }}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-12\">\r\n                            <h4 className='AnswersSubheading'>Answers ({this.state.CountA}): </h4><br />\r\n                            <div className='Separator'>\r\n                                <hr />\r\n                            </div>\r\n                            {\r\n                                this.state.RecentA.map((data) =>\r\n                                    <div>\r\n                                        <span id={'answer' + data.a_id}> <text className='EditAnswerText'>{data.answer}</text></span>< br />\r\n                                        <span>posted on: {data.niceDate} @ {data.niceTime}</span>\r\n\r\n                                        <a href='#' onClick={() => this.editAnswer(data.a_id, data.answer)} style={{ marginLeft: '20px' }}>Edit</a>\r\n                                        <a href='#' onClick={() => this.handleButtonToggleDeleteAnswerModal(true, data.a_id)} style={{ marginLeft: '20px', marginRight: '20px' }}>Delete</a>\r\n                                        <br /><br />\r\n                                        <Button variant='primary' onClick={() => this.editAnswerRating(\"UP\", data.a_id)} className='VoteUp'><i style={{ marginBottom: '3px' }} class=\"arrow up\"></i></Button>\r\n                                        <Button variant='danger' onClick={() => this.editAnswerRating(\"DOWN\", data.a_id)} className='VoteDown'><i style={{ marginBottom: '7px' }} class=\"arrow down\"></i></Button>\r\n                                        (rating: {data.rating})\r\n                                        <Button variant='primary' size='sm' onClick={() => this.answerStorage(data.a_id)} className='CommentButton'>Add Comment</Button><br /><br />\r\n                                        <hr className='AnswerCommentSeparator' />\r\n                                        <br />\r\n                                        {\r\n                                            this.state.RecentC.map((RecentC) => {\r\n                                                if (data.a_id == RecentC.a_id) {\r\n\r\n\r\n                                                    var element = <div><span id={'comment' + RecentC.c_id}><textarea rows='3' className='CommentBox' disabled>{RecentC.comment}</textarea></span><br />\r\n\r\n\r\n                                                        <span style={{ marginLeft: '55px' }}>posted on: {RecentC.niceDate}</span><br />\r\n                                                        <span style={{ marginLeft: '55px' }}>@ {RecentC.niceTime}</span>\r\n                                                        <a href='#' onClick={() => this.editComment(RecentC.c_id, RecentC.comment)} style={{ marginLeft: '20px' }}>Edit</a>\r\n                                                        <a href='#' onClick={() => this.handleButtonToggleDeleteCommentModal(true, RecentC.c_id)} style={{ marginLeft: '20px', marginRight: '20px' }}>Delete</a>\r\n                                                        <br /><br /><br />\r\n\r\n                                                    </div>\r\n\r\n                                                }\r\n                                                return (\r\n                                                    <div>\r\n                                                        {element}\r\n                                                    </div>\r\n\r\n                                                )\r\n                                            }\r\n                                            )\r\n                                        }\r\n                                        <br /><br />\r\n                                        <hr className='Separator' />\r\n\r\n                                    </div>\r\n                                )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DeleteAnswerModal title={\"Delete Confirmation\"} showModal2={this.state.showModal2} close={() => this.handleButtonToggleDeleteAnswerModal(false)} />\r\n                <DeleteCommentModal title={\"Delete Confirmation\"} showModal3={this.state.showModal3} close={() => this.handleButtonToggleDeleteCommentModal(false)} />\r\n                <CommentModal content={this.textComment()} title={\"Add A Comment\"} showModal={this.state.showModal} close={() => this.handleButtonToggleCommentModal(false)} />\r\n                <footer class=\"py-1 sticky-bottom footer\" className='FAQFooter'>\r\n                    <div class=\"container\">\r\n                        <p class=\"m-0 text-center text-black\">Copyright &copy; APT 2019</p>\r\n                    </div>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}